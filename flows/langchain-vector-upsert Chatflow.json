{
    "nodes": [
        {
            "width": 300,
            "height": 374,
            "id": "recursiveCharacterTextSplitter_1",
            "position": {
                "x": -886.3856474702321,
                "y": 394.6900684061286
            },
            "type": "customNode",
            "data": {
                "id": "recursiveCharacterTextSplitter_1",
                "label": "Recursive Character Text Splitter",
                "name": "recursiveCharacterTextSplitter",
                "type": "RecursiveCharacterTextSplitter",
                "baseClasses": [
                    "RecursiveCharacterTextSplitter",
                    "TextSplitter"
                ],
                "category": "Text Splitters",
                "description": "Split documents recursively by different characters - starting with \"\n\n\", then \"\n\", then \" \"",
                "inputParams": [
                    {
                        "label": "Chunk Size",
                        "name": "chunkSize",
                        "type": "number",
                        "default": 1000,
                        "optional": true,
                        "id": "recursiveCharacterTextSplitter_1-input-chunkSize-number"
                    },
                    {
                        "label": "Chunk Overlap",
                        "name": "chunkOverlap",
                        "type": "number",
                        "optional": true,
                        "id": "recursiveCharacterTextSplitter_1-input-chunkOverlap-number"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "chunkSize": 1000,
                    "chunkOverlap": ""
                },
                "outputAnchors": [
                    {
                        "id": "recursiveCharacterTextSplitter_1-output-recursiveCharacterTextSplitter-RecursiveCharacterTextSplitter|TextSplitter",
                        "name": "recursiveCharacterTextSplitter",
                        "label": "RecursiveCharacterTextSplitter",
                        "type": "RecursiveCharacterTextSplitter | TextSplitter"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "selected": false,
            "positionAbsolute": {
                "x": -886.3856474702321,
                "y": 394.6900684061286
            },
            "dragging": false
        },
        {
            "width": 300,
            "height": 521,
            "id": "openAI_1",
            "position": {
                "x": 1271.8861707573046,
                "y": 243.23789354128752
            },
            "type": "customNode",
            "data": {
                "id": "openAI_1",
                "label": "OpenAI",
                "name": "openAI",
                "type": "OpenAI",
                "baseClasses": [
                    "OpenAI",
                    "BaseLLM",
                    "BaseLanguageModel",
                    "BaseLangChain"
                ],
                "category": "LLMs",
                "description": "Wrapper around OpenAI large language models",
                "inputParams": [
                    {
                        "label": "OpenAI Api Key",
                        "name": "openAIApiKey",
                        "type": "password",
                        "id": "openAI_1-input-openAIApiKey-password"
                    },
                    {
                        "label": "Model Name",
                        "name": "modelName",
                        "type": "options",
                        "options": [
                            {
                                "label": "text-davinci-003",
                                "name": "text-davinci-003"
                            },
                            {
                                "label": "text-davinci-002",
                                "name": "text-davinci-002"
                            },
                            {
                                "label": "text-curie-001",
                                "name": "text-curie-001"
                            },
                            {
                                "label": "text-babbage-001",
                                "name": "text-babbage-001"
                            }
                        ],
                        "default": "text-davinci-003",
                        "optional": true,
                        "id": "openAI_1-input-modelName-options"
                    },
                    {
                        "label": "Temperature",
                        "name": "temperature",
                        "type": "number",
                        "default": 0.7,
                        "optional": true,
                        "id": "openAI_1-input-temperature-number"
                    },
                    {
                        "label": "Max Tokens",
                        "name": "maxTokens",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAI_1-input-maxTokens-number"
                    },
                    {
                        "label": "Top Probability",
                        "name": "topP",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAI_1-input-topP-number"
                    },
                    {
                        "label": "Best Of",
                        "name": "bestOf",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAI_1-input-bestOf-number"
                    },
                    {
                        "label": "Frequency Penalty",
                        "name": "frequencyPenalty",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAI_1-input-frequencyPenalty-number"
                    },
                    {
                        "label": "Presence Penalty",
                        "name": "presencePenalty",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAI_1-input-presencePenalty-number"
                    },
                    {
                        "label": "Batch Size",
                        "name": "batchSize",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAI_1-input-batchSize-number"
                    },
                    {
                        "label": "Timeout",
                        "name": "timeout",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAI_1-input-timeout-number"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "modelName": "text-davinci-003",
                    "temperature": "0",
                    "maxTokens": "",
                    "topP": "",
                    "bestOf": "",
                    "frequencyPenalty": "",
                    "presencePenalty": "",
                    "batchSize": "",
                    "timeout": ""
                },
                "outputAnchors": [
                    {
                        "id": "openAI_1-output-openAI-OpenAI|BaseLLM|BaseLanguageModel|BaseLangChain",
                        "name": "openAI",
                        "label": "OpenAI",
                        "type": "OpenAI | BaseLLM | BaseLanguageModel | BaseLangChain"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "positionAbsolute": {
                "x": 1271.8861707573046,
                "y": 243.23789354128752
            },
            "selected": false,
            "dragging": false
        },
        {
            "width": 300,
            "height": 328,
            "id": "openAIEmbeddings_1",
            "position": {
                "x": 215.4685632231197,
                "y": 675.9940233413434
            },
            "type": "customNode",
            "data": {
                "id": "openAIEmbeddings_1",
                "label": "OpenAI Embeddings",
                "name": "openAIEmbeddings",
                "type": "OpenAIEmbeddings",
                "baseClasses": [
                    "OpenAIEmbeddings",
                    "Embeddings"
                ],
                "category": "Embeddings",
                "description": "OpenAI API to generate embeddings for a given text",
                "inputParams": [
                    {
                        "label": "OpenAI Api Key",
                        "name": "openAIApiKey",
                        "type": "password",
                        "id": "openAIEmbeddings_1-input-openAIApiKey-password"
                    },
                    {
                        "label": "Strip New Lines",
                        "name": "stripNewLines",
                        "type": "boolean",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAIEmbeddings_1-input-stripNewLines-boolean"
                    },
                    {
                        "label": "Batch Size",
                        "name": "batchSize",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAIEmbeddings_1-input-batchSize-number"
                    },
                    {
                        "label": "Timeout",
                        "name": "timeout",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAIEmbeddings_1-input-timeout-number"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "stripNewLines": "",
                    "batchSize": "",
                    "timeout": ""
                },
                "outputAnchors": [
                    {
                        "id": "openAIEmbeddings_1-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings",
                        "name": "openAIEmbeddings",
                        "label": "OpenAIEmbeddings",
                        "type": "OpenAIEmbeddings | Embeddings"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "selected": false,
            "positionAbsolute": {
                "x": 215.4685632231197,
                "y": 675.9940233413434
            },
            "dragging": false
        },
        {
            "width": 300,
            "height": 426,
            "id": "textFile_0",
            "position": {
                "x": -108.01322087633864,
                "y": -474.91831357601893
            },
            "type": "customNode",
            "data": {
                "id": "textFile_0",
                "label": "Text File",
                "name": "textFile",
                "type": "Document",
                "baseClasses": [
                    "Document"
                ],
                "category": "Document Loaders",
                "description": "Load data from text files",
                "inputParams": [
                    {
                        "label": "Txt File",
                        "name": "txtFile",
                        "type": "file",
                        "fileType": ".txt",
                        "id": "textFile_0-input-txtFile-file"
                    },
                    {
                        "label": "Metadata",
                        "name": "metadata",
                        "type": "json",
                        "optional": true,
                        "additionalParams": true,
                        "id": "textFile_0-input-metadata-json"
                    }
                ],
                "inputAnchors": [
                    {
                        "label": "Text Splitter",
                        "name": "textSplitter",
                        "type": "TextSplitter",
                        "optional": true,
                        "id": "textFile_0-input-textSplitter-TextSplitter"
                    }
                ],
                "inputs": {
                    "textSplitter": "{{markdownTextSplitter_0.data.instance}}",
                    "metadata": "{\"id\":\"doc1\",\"doc_type\":\"md\"}"
                },
                "outputAnchors": [
                    {
                        "id": "textFile_0-output-textFile-Document",
                        "name": "textFile",
                        "label": "Document",
                        "type": "Document"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "selected": false,
            "positionAbsolute": {
                "x": -108.01322087633864,
                "y": -474.91831357601893
            },
            "dragging": false
        },
        {
            "width": 300,
            "height": 521,
            "id": "pdfFile_0",
            "position": {
                "x": -225.054836690397,
                "y": 218.29841013290388
            },
            "type": "customNode",
            "data": {
                "id": "pdfFile_0",
                "label": "Pdf File",
                "name": "pdfFile",
                "type": "Document",
                "baseClasses": [
                    "Document"
                ],
                "category": "Document Loaders",
                "description": "Load data from PDF files",
                "inputParams": [
                    {
                        "label": "Pdf File",
                        "name": "pdfFile",
                        "type": "file",
                        "fileType": ".pdf",
                        "id": "pdfFile_0-input-pdfFile-file"
                    },
                    {
                        "label": "Usage",
                        "name": "usage",
                        "type": "options",
                        "options": [
                            {
                                "label": "One document per page",
                                "name": "perPage"
                            },
                            {
                                "label": "One document per file",
                                "name": "perFile"
                            }
                        ],
                        "default": "perPage",
                        "id": "pdfFile_0-input-usage-options"
                    },
                    {
                        "label": "Metadata",
                        "name": "metadata",
                        "type": "json",
                        "optional": true,
                        "additionalParams": true,
                        "id": "pdfFile_0-input-metadata-json"
                    }
                ],
                "inputAnchors": [
                    {
                        "label": "Text Splitter",
                        "name": "textSplitter",
                        "type": "TextSplitter",
                        "optional": true,
                        "id": "pdfFile_0-input-textSplitter-TextSplitter"
                    }
                ],
                "inputs": {
                    "textSplitter": "{{recursiveCharacterTextSplitter_1.data.instance}}",
                    "usage": "perFile",
                    "metadata": "{\"id\":\"doc2\"}"
                },
                "outputAnchors": [
                    {
                        "id": "pdfFile_0-output-pdfFile-Document",
                        "name": "pdfFile",
                        "label": "Document",
                        "type": "Document"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "selected": false,
            "positionAbsolute": {
                "x": -225.054836690397,
                "y": 218.29841013290388
            },
            "dragging": false
        },
        {
            "width": 300,
            "height": 697,
            "id": "pineconeUpsert_0",
            "position": {
                "x": 609.4746415649968,
                "y": 35.067470551418495
            },
            "type": "customNode",
            "data": {
                "id": "pineconeUpsert_0",
                "label": "Pinecone Upsert Document",
                "name": "pineconeUpsert",
                "type": "Pinecone",
                "baseClasses": [
                    "Pinecone",
                    "VectorStoreRetriever",
                    "BaseRetriever"
                ],
                "category": "Vector Stores",
                "description": "Upsert documents to Pinecone",
                "inputParams": [
                    {
                        "label": "Pinecone Api Key",
                        "name": "pineconeApiKey",
                        "type": "password",
                        "id": "pineconeUpsert_0-input-pineconeApiKey-password"
                    },
                    {
                        "label": "Pinecone Environment",
                        "name": "pineconeEnv",
                        "type": "string",
                        "id": "pineconeUpsert_0-input-pineconeEnv-string"
                    },
                    {
                        "label": "Pinecone Index",
                        "name": "pineconeIndex",
                        "type": "string",
                        "id": "pineconeUpsert_0-input-pineconeIndex-string"
                    },
                    {
                        "label": "Pinecone Namespace",
                        "name": "pineconeNamespace",
                        "type": "string",
                        "placeholder": "my-first-namespace",
                        "optional": true,
                        "id": "pineconeUpsert_0-input-pineconeNamespace-string"
                    }
                ],
                "inputAnchors": [
                    {
                        "label": "Document",
                        "name": "document",
                        "type": "Document",
                        "list": true,
                        "id": "pineconeUpsert_0-input-document-Document"
                    },
                    {
                        "label": "Embeddings",
                        "name": "embeddings",
                        "type": "Embeddings",
                        "id": "pineconeUpsert_0-input-embeddings-Embeddings"
                    }
                ],
                "inputs": {
                    "document": [
                        "{{pdfFile_0.data.instance}}",
                        "{{textFile_0.data.instance}}"
                    ],
                    "embeddings": "{{openAIEmbeddings_1.data.instance}}",
                    "pineconeEnv": "us-west4-gcp-free",
                    "pineconeIndex": "test1",
                    "pineconeNamespace": "multi_doc_chat"
                },
                "outputAnchors": [
                    {
                        "name": "output",
                        "label": "Output",
                        "type": "options",
                        "options": [
                            {
                                "id": "pineconeUpsert_0-output-retriever-Pinecone|VectorStoreRetriever|BaseRetriever",
                                "name": "retriever",
                                "label": "Pinecone Retriever",
                                "type": "Pinecone | VectorStoreRetriever | BaseRetriever"
                            },
                            {
                                "id": "pineconeUpsert_0-output-vectorStore-Pinecone|VectorStore",
                                "name": "vectorStore",
                                "label": "Pinecone Vector Store",
                                "type": "Pinecone | VectorStore"
                            }
                        ],
                        "default": "retriever"
                    }
                ],
                "outputs": {
                    "output": "retriever"
                },
                "selected": false
            },
            "selected": false,
            "positionAbsolute": {
                "x": 609.4746415649968,
                "y": 35.067470551418495
            },
            "dragging": false
        },
        {
            "width": 300,
            "height": 330,
            "id": "conversationalRetrievalQAChain_0",
            "position": {
                "x": 1575.2969988538096,
                "y": 917.0541458099443
            },
            "type": "customNode",
            "data": {
                "id": "conversationalRetrievalQAChain_0",
                "label": "Conversational Retrieval QA Chain",
                "name": "conversationalRetrievalQAChain",
                "type": "ConversationalRetrievalQAChain",
                "baseClasses": [
                    "ConversationalRetrievalQAChain",
                    "BaseChain",
                    "BaseLangChain"
                ],
                "category": "Chains",
                "description": "Document QA - built on RetrievalQAChain to provide a chat history component",
                "inputParams": [
                    {
                        "label": "System Message",
                        "name": "systemMessagePrompt",
                        "type": "string",
                        "rows": 4,
                        "additionalParams": true,
                        "optional": true,
                        "placeholder": "I want you to act as a document that I am having a conversation with. Your name is \"AI Assistant\". You will provide me with answers from the given info. If the answer is not included, say exactly \"Hmm, I am not sure.\" and stop after that. Refuse to answer any question not about the info. Never break character.",
                        "id": "conversationalRetrievalQAChain_0-input-systemMessagePrompt-string"
                    }
                ],
                "inputAnchors": [
                    {
                        "label": "Language Model",
                        "name": "model",
                        "type": "BaseLanguageModel",
                        "id": "conversationalRetrievalQAChain_0-input-model-BaseLanguageModel"
                    },
                    {
                        "label": "Vector Store Retriever",
                        "name": "vectorStoreRetriever",
                        "type": "BaseRetriever",
                        "id": "conversationalRetrievalQAChain_0-input-vectorStoreRetriever-BaseRetriever"
                    }
                ],
                "inputs": {
                    "model": "{{openAI_1.data.instance}}",
                    "vectorStoreRetriever": "{{pineconeUpsert_0.data.instance}}"
                },
                "outputAnchors": [
                    {
                        "id": "conversationalRetrievalQAChain_0-output-conversationalRetrievalQAChain-ConversationalRetrievalQAChain|BaseChain|BaseLangChain",
                        "name": "conversationalRetrievalQAChain",
                        "label": "ConversationalRetrievalQAChain",
                        "type": "ConversationalRetrievalQAChain | BaseChain | BaseLangChain"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "selected": false,
            "positionAbsolute": {
                "x": 1575.2969988538096,
                "y": 917.0541458099443
            },
            "dragging": false
        },
        {
            "width": 300,
            "height": 374,
            "id": "markdownTextSplitter_0",
            "position": {
                "x": -863.1663729905347,
                "y": -416.20692104002
            },
            "type": "customNode",
            "data": {
                "id": "markdownTextSplitter_0",
                "label": "Markdown Text Splitter",
                "name": "markdownTextSplitter",
                "type": "MarkdownTextSplitter",
                "baseClasses": [
                    "MarkdownTextSplitter",
                    "RecursiveCharacterTextSplitter",
                    "TextSplitter"
                ],
                "category": "Text Splitters",
                "description": "Split your content into documents based on the Markdown headers",
                "inputParams": [
                    {
                        "label": "Chunk Size",
                        "name": "chunkSize",
                        "type": "number",
                        "default": 1000,
                        "optional": true,
                        "id": "markdownTextSplitter_0-input-chunkSize-number"
                    },
                    {
                        "label": "Chunk Overlap",
                        "name": "chunkOverlap",
                        "type": "number",
                        "optional": true,
                        "id": "markdownTextSplitter_0-input-chunkOverlap-number"
                    }
                ],
                "inputAnchors": [],
                "inputs": {
                    "chunkSize": 1000,
                    "chunkOverlap": ""
                },
                "outputAnchors": [
                    {
                        "id": "markdownTextSplitter_0-output-markdownTextSplitter-MarkdownTextSplitter|RecursiveCharacterTextSplitter|TextSplitter",
                        "name": "markdownTextSplitter",
                        "label": "MarkdownTextSplitter",
                        "type": "MarkdownTextSplitter | RecursiveCharacterTextSplitter | TextSplitter"
                    }
                ],
                "outputs": {},
                "selected": false
            },
            "selected": false,
            "positionAbsolute": {
                "x": -863.1663729905347,
                "y": -416.20692104002
            },
            "dragging": false
        }
    ],
    "edges": [
        {
            "source": "recursiveCharacterTextSplitter_1",
            "sourceHandle": "recursiveCharacterTextSplitter_1-output-recursiveCharacterTextSplitter-RecursiveCharacterTextSplitter|TextSplitter",
            "target": "pdfFile_0",
            "targetHandle": "pdfFile_0-input-textSplitter-TextSplitter",
            "type": "buttonedge",
            "id": "recursiveCharacterTextSplitter_1-recursiveCharacterTextSplitter_1-output-recursiveCharacterTextSplitter-RecursiveCharacterTextSplitter|TextSplitter-pdfFile_0-pdfFile_0-input-textSplitter-TextSplitter",
            "data": {
                "label": ""
            }
        },
        {
            "source": "pdfFile_0",
            "sourceHandle": "pdfFile_0-output-pdfFile-Document",
            "target": "pineconeUpsert_0",
            "targetHandle": "pineconeUpsert_0-input-document-Document",
            "type": "buttonedge",
            "id": "pdfFile_0-pdfFile_0-output-pdfFile-Document-pineconeUpsert_0-pineconeUpsert_0-input-document-Document",
            "data": {
                "label": ""
            }
        },
        {
            "source": "textFile_0",
            "sourceHandle": "textFile_0-output-textFile-Document",
            "target": "pineconeUpsert_0",
            "targetHandle": "pineconeUpsert_0-input-document-Document",
            "type": "buttonedge",
            "id": "textFile_0-textFile_0-output-textFile-Document-pineconeUpsert_0-pineconeUpsert_0-input-document-Document",
            "data": {
                "label": ""
            }
        },
        {
            "source": "openAI_1",
            "sourceHandle": "openAI_1-output-openAI-OpenAI|BaseLLM|BaseLanguageModel|BaseLangChain",
            "target": "conversationalRetrievalQAChain_0",
            "targetHandle": "conversationalRetrievalQAChain_0-input-model-BaseLanguageModel",
            "type": "buttonedge",
            "id": "openAI_1-openAI_1-output-openAI-OpenAI|BaseLLM|BaseLanguageModel|BaseLangChain-conversationalRetrievalQAChain_0-conversationalRetrievalQAChain_0-input-model-BaseLanguageModel",
            "data": {
                "label": ""
            }
        },
        {
            "source": "pineconeUpsert_0",
            "sourceHandle": "pineconeUpsert_0-output-retriever-Pinecone|VectorStoreRetriever|BaseRetriever",
            "target": "conversationalRetrievalQAChain_0",
            "targetHandle": "conversationalRetrievalQAChain_0-input-vectorStoreRetriever-BaseRetriever",
            "type": "buttonedge",
            "id": "pineconeUpsert_0-pineconeUpsert_0-output-retriever-Pinecone|VectorStoreRetriever|BaseRetriever-conversationalRetrievalQAChain_0-conversationalRetrievalQAChain_0-input-vectorStoreRetriever-BaseRetriever",
            "data": {
                "label": ""
            }
        },
        {
            "source": "openAIEmbeddings_1",
            "sourceHandle": "openAIEmbeddings_1-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings",
            "target": "pineconeUpsert_0",
            "targetHandle": "pineconeUpsert_0-input-embeddings-Embeddings",
            "type": "buttonedge",
            "id": "openAIEmbeddings_1-openAIEmbeddings_1-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings-pineconeUpsert_0-pineconeUpsert_0-input-embeddings-Embeddings",
            "data": {
                "label": ""
            }
        },
        {
            "source": "markdownTextSplitter_0",
            "sourceHandle": "markdownTextSplitter_0-output-markdownTextSplitter-MarkdownTextSplitter|RecursiveCharacterTextSplitter|TextSplitter",
            "target": "textFile_0",
            "targetHandle": "textFile_0-input-textSplitter-TextSplitter",
            "type": "buttonedge",
            "id": "markdownTextSplitter_0-markdownTextSplitter_0-output-markdownTextSplitter-MarkdownTextSplitter|RecursiveCharacterTextSplitter|TextSplitter-textFile_0-textFile_0-input-textSplitter-TextSplitter",
            "data": {
                "label": ""
            }
        }
    ]
}