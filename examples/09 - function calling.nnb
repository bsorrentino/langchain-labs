{
    "cells": [
        {
            "language": "markdown",
            "source": [
                "Initialize [OpenAI nodejs SDK](https://www.npmjs.com/package/openai)"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "import { Configuration, OpenAIApi } from \"openai\";\n\n\nconst configuration = new Configuration({\n  apiKey: process.env.OPENAI_API_KEY,\n});\n\nconst openai = new OpenAIApi(configuration);\n\n"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "install [@azure/openai](https://www.npmjs.com/package/@azure/openai) package and initialize"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "const { OpenAIClient, AzureKeyCredential } from \"@azure/openai\";\n"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "Let define a `function description` to provide function metadata to GPT"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "const function_descriptions = [\n    {\n        \"name\": \"export_solution\",\n        \"description\": \"export a dataverse solution to remove environment\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"path\": {\n                    \"type\": \"string\",\n                    \"description\": \"the solution path\",\n                },\n                \"environment\": {\n                    \"type\": \"string\",\n                    \"description\": \"the target environment\",\n                },\n                \"type\": {\n                    \"type\": \"string\",\n                    \"description\": \"the solution type. The default is managed\",\n                    \"enum\": [ \"both\", \"managed\", \"unmanaged\" ]\n                },\n            },\n            \"required\": [\"path\", \"environment\"],\n        },\n    }\n];"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "const user_query1 = \"let import the solution 'mysolution.zip' from path '/tmp' in environment 'bartolo' as unmanaged\"; \nconst user_query2 = \"how in javascript can iterate over an array\"; \nconst user_query3 = \"how in javascript can iterate over an array and import the solution 'mysolution.zip' from path '/tmp' in environment 'bartolo'\"; \n\ntry {\nconst chatCompletion = await openai.createChatCompletion({\n    model: \"gpt-35-turbo-0613\",\n    messages: [\n      {role: \"user\", content: user_query1}\n    ],\n    functions: function_descriptions,\n    function_call: \"auto\"\n  });\n\n  const { message, finish_reason } = chatCompletion.data.choices[0];\n\n  console.log(finish_reason, message );\n}\ncatch( e ) {\n  console.log( e )\n}"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "Error: Request failed with status code 401",
                                "    at createError (/workspaces/langchain-labs/node_modules/axios/lib/core/createError.js:16:15)",
                                "    at settle (/workspaces/langchain-labs/node_modules/axios/lib/core/settle.js:17:12)",
                                "    at IncomingMessage.handleStreamEnd (/workspaces/langchain-labs/node_modules/axios/lib/adapters/http.js:322:11)",
                                "    at IncomingMessage.emit (node:events:525:35)",
                                "    at IncomingMessage.emit (node:domain:489:12)",
                                "    at endReadableNT (node:internal/streams/readable:1359:12)",
                                "    at processTicksAndRejections (node:internal/process/task_queues:82:21) {",
                                "  config: {",
                                "    transitional: {",
                                "      silentJSONParsing: true,",
                                "      forcedJSONParsing: true,",
                                "      clarifyTimeoutError: false",
                                "    },",
                                "    adapter: [Function: httpAdapter],",
                                "    transformRequest: [ [Function: transformRequest] ],",
                                "    transformResponse: [ [Function: transformResponse] ],",
                                "    timeout: 0,",
                                "    xsrfCookieName: 'XSRF-TOKEN',",
                                "    xsrfHeaderName: 'X-XSRF-TOKEN',",
                                "    maxContentLength: -1,",
                                "    maxBodyLength: -1,",
                                "    validateStatus: [Function: validateStatus],",
                                "    headers: {",
                                "      Accept: 'application/json, text/plain, */*',",
                                "      'Content-Type': 'application/json',",
                                "      'User-Agent': 'OpenAI/NodeJS/3.3.0',",
                                "      Authorization: 'Bearer bcd83e6bfda042629f8713a7aae58ec2',",
                                "      'Content-Length': 628",
                                "    },",
                                "    method: 'post',",
                                "    data: `{\"model\":\"gpt-3.5-turbo-0613\",\"messages\":[{\"role\":\"user\",\"content\":\"let import the solution 'mysolution.zip' from path '/tmp' in environment 'bartolo' as unmanaged\"}],\"functions\":[{\"name\":\"export_solution\",\"description\":\"export a dataverse solution to remove environment\",\"parameters\":{\"type\":\"object\",\"properties\":{\"path\":{\"type\":\"string\",\"description\":\"the solution path\"},\"environment\":{\"type\":\"string\",\"description\":\"the target environment\"},\"type\":{\"type\":\"string\",\"description\":\"the solution type. The default is managed\",\"enum\":[\"both\",\"managed\",\"unmanaged\"]}},\"required\":[\"path\",\"environment\"]}}],\"function_call\":\"auto\"}`,",
                                "    url: 'https://api.openai.com/v1/chat/completions'",
                                "  },",
                                "  request: <ref *1> ClientRequest {",
                                "    _events: [Object: null prototype] {",
                                "      abort: [Function (anonymous)],",
                                "      aborted: [Function (anonymous)],",
                                "      connect: [Function (anonymous)],",
                                "      error: [Function (anonymous)],",
                                "      socket: [Function (anonymous)],",
                                "      timeout: [Function (anonymous)],",
                                "      finish: [Function: requestOnFinish]",
                                "    },",
                                "    _eventsCount: 7,",
                                "    _maxListeners: undefined,",
                                "    outputData: [],",
                                "    outputSize: 0,",
                                "    writable: true,",
                                "    destroyed: true,",
                                "    _last: false,",
                                "    chunkedEncoding: false,",
                                "    shouldKeepAlive: true,",
                                "    maxRequestsOnConnectionReached: false,",
                                "    _defaultKeepAlive: true,",
                                "    useChunkedEncodingByDefault: true,",
                                "    sendDate: false,",
                                "    _removedConnection: false,",
                                "    _removedContLen: false,",
                                "    _removedTE: false,",
                                "    strictContentLength: false,",
                                "    _contentLength: 628,",
                                "    _hasBody: true,",
                                "    _trailer: '',",
                                "    finished: true,",
                                "    _headerSent: true,",
                                "    _closed: true,",
                                "    socket: TLSSocket {",
                                "      _tlsOptions: [Object],",
                                "      _secureEstablished: true,",
                                "      _securePending: false,",
                                "      _newSessionPending: false,",
                                "      _controlReleased: true,",
                                "      secureConnecting: false,",
                                "      _SNICallback: null,",
                                "      servername: 'api.openai.com',",
                                "      alpnProtocol: false,",
                                "      authorized: true,",
                                "      authorizationError: null,",
                                "      encrypted: true,",
                                "      _events: [Object: null prototype],",
                                "      _eventsCount: 9,",
                                "      connecting: false,",
                                "      _hadError: false,",
                                "      _parent: null,",
                                "      _host: 'api.openai.com',",
                                "      _closeAfterHandlingError: false,",
                                "      _readableState: [ReadableState],",
                                "      _maxListeners: undefined,",
                                "      _writableState: [WritableState],",
                                "      allowHalfOpen: false,",
                                "      _sockname: null,",
                                "      _pendingData: null,",
                                "      _pendingEncoding: '',",
                                "      server: undefined,",
                                "      _server: null,",
                                "      ssl: [TLSWrap],",
                                "      _requestCert: true,",
                                "      _rejectUnauthorized: true,",
                                "      timeout: 5000,",
                                "      parser: null,",
                                "      _httpMessage: null,",
                                "      [Symbol(res)]: [TLSWrap],",
                                "      [Symbol(verified)]: true,",
                                "      [Symbol(pendingSession)]: null,",
                                "      [Symbol(async_id_symbol)]: -1,",
                                "      [Symbol(kHandle)]: [TLSWrap],",
                                "      [Symbol(lastWriteQueueSize)]: 0,",
                                "      [Symbol(timeout)]: Timeout {",
                                "        _idleTimeout: 5000,",
                                "        _idlePrev: [TimersList],",
                                "        _idleNext: [TimersList],",
                                "        _idleStart: 154958,",
                                "        _onTimeout: [Function: bound ],",
                                "        _timerArgs: undefined,",
                                "        _repeat: null,",
                                "        _destroyed: false,",
                                "        [Symbol(refed)]: false,",
                                "        [Symbol(kHasPrimitive)]: false,",
                                "        [Symbol(asyncId)]: 260,",
                                "        [Symbol(triggerId)]: 258",
                                "      },",
                                "      [Symbol(kBuffer)]: null,",
                                "      [Symbol(kBufferCb)]: null,",
                                "      [Symbol(kBufferGen)]: null,",
                                "      [Symbol(kCapture)]: false,",
                                "      [Symbol(kSetNoDelay)]: false,",
                                "      [Symbol(kSetKeepAlive)]: true,",
                                "      [Symbol(kSetKeepAliveInitialDelay)]: 1,",
                                "      [Symbol(kBytesRead)]: 0,",
                                "      [Symbol(kBytesWritten)]: 0,",
                                "      [Symbol(connect-options)]: [Object]",
                                "    },",
                                "    _header: 'POST /v1/chat/completions HTTP/1.1\\r\\n' +",
                                "      'Accept: application/json, text/plain, */*\\r\\n' +",
                                "      'Content-Type: application/json\\r\\n' +",
                                "      'User-Agent: OpenAI/NodeJS/3.3.0\\r\\n' +",
                                "      'Authorization: Bearer bcd83e6bfda042629f8713a7aae58ec2\\r\\n' +",
                                "      'Content-Length: 628\\r\\n' +",
                                "      'Host: api.openai.com\\r\\n' +",
                                "      'Connection: keep-alive\\r\\n' +",
                                "      '\\r\\n',",
                                "    _keepAliveTimeout: 0,",
                                "    _onPendingData: [Function: nop],",
                                "    agent: Agent {",
                                "      _events: [Object: null prototype],",
                                "      _eventsCount: 2,",
                                "      _maxListeners: undefined,",
                                "      defaultPort: 443,",
                                "      protocol: 'https:',",
                                "      options: [Object: null prototype],",
                                "      requests: [Object: null prototype] {},",
                                "      sockets: [Object: null prototype] {},",
                                "      freeSockets: [Object: null prototype],",
                                "      keepAliveMsecs: 1000,",
                                "      keepAlive: true,",
                                "      maxSockets: Infinity,",
                                "      maxFreeSockets: 256,",
                                "      scheduling: 'lifo',",
                                "      maxTotalSockets: Infinity,",
                                "      totalSocketCount: 1,",
                                "      maxCachedSessions: 100,",
                                "      _sessionCache: [Object],",
                                "      [Symbol(kCapture)]: false",
                                "    },",
                                "    socketPath: undefined,",
                                "    method: 'POST',",
                                "    maxHeaderSize: undefined,",
                                "    insecureHTTPParser: undefined,",
                                "    joinDuplicateHeaders: undefined,",
                                "    path: '/v1/chat/completions',",
                                "    _ended: true,",
                                "    res: IncomingMessage {",
                                "      _readableState: [ReadableState],",
                                "      _events: [Object: null prototype],",
                                "      _eventsCount: 4,",
                                "      _maxListeners: undefined,",
                                "      socket: null,",
                                "      httpVersionMajor: 1,",
                                "      httpVersionMinor: 1,",
                                "      httpVersion: '1.1',",
                                "      complete: true,",
                                "      rawHeaders: [Array],",
                                "      rawTrailers: [],",
                                "      joinDuplicateHeaders: undefined,",
                                "      aborted: false,",
                                "      upgrade: false,",
                                "      url: '',",
                                "      method: null,",
                                "      statusCode: 401,",
                                "      statusMessage: 'Unauthorized',",
                                "      client: [TLSSocket],",
                                "      _consuming: false,",
                                "      _dumped: false,",
                                "      req: [Circular *1],",
                                "      responseUrl: 'https://api.openai.com/v1/chat/completions',",
                                "      redirects: [],",
                                "      [Symbol(kCapture)]: false,",
                                "      [Symbol(kHeaders)]: [Object],",
                                "      [Symbol(kHeadersCount)]: 22,",
                                "      [Symbol(kTrailers)]: null,",
                                "      [Symbol(kTrailersCount)]: 0",
                                "    },",
                                "    aborted: false,",
                                "    timeoutCb: null,",
                                "    upgradeOrConnect: false,",
                                "    parser: null,",
                                "    maxHeadersCount: null,",
                                "    reusedSocket: false,",
                                "    host: 'api.openai.com',",
                                "    protocol: 'https:',",
                                "    _redirectable: Writable {",
                                "      _writableState: [WritableState],",
                                "      _events: [Object: null prototype],",
                                "      _eventsCount: 3,",
                                "      _maxListeners: undefined,",
                                "      _options: [Object],",
                                "      _ended: true,",
                                "      _ending: true,",
                                "      _redirectCount: 0,",
                                "      _redirects: [],",
                                "      _requestBodyLength: 628,",
                                "      _requestBodyBuffers: [],",
                                "      _onNativeResponse: [Function (anonymous)],",
                                "      _currentRequest: [Circular *1],",
                                "      _currentUrl: 'https://api.openai.com/v1/chat/completions',",
                                "      [Symbol(kCapture)]: false",
                                "    },",
                                "    [Symbol(kCapture)]: false,",
                                "    [Symbol(kBytesWritten)]: 0,",
                                "    [Symbol(kNeedDrain)]: false,",
                                "    [Symbol(corked)]: 0,",
                                "    [Symbol(kOutHeaders)]: [Object: null prototype] {",
                                "      accept: [Array],",
                                "      'content-type': [Array],",
                                "      'user-agent': [Array],",
                                "      authorization: [Array],",
                                "      'content-length': [Array],",
                                "      host: [Array]",
                                "    },",
                                "    [Symbol(errored)]: null,",
                                "    [Symbol(kHighWaterMark)]: 16384,",
                                "    [Symbol(kUniqueHeaders)]: null",
                                "  },",
                                "  response: {",
                                "    status: 401,",
                                "    statusText: 'Unauthorized',",
                                "    headers: {",
                                "      date: 'Mon, 24 Jul 2023 09:01:08 GMT',",
                                "      'content-type': 'application/json; charset=utf-8',",
                                "      'content-length': '282',",
                                "      connection: 'keep-alive',",
                                "      vary: 'Origin',",
                                "      'x-request-id': 'e80df97b204898b208aaa67a9e64161c',",
                                "      'strict-transport-security': 'max-age=15724800; includeSubDomains',",
                                "      'cf-cache-status': 'DYNAMIC',",
                                "      server: 'cloudflare',",
                                "      'cf-ray': '7ebafa0fcbe70b04-AMS',",
                                "      'alt-svc': 'h3=\":443\"; ma=86400'",
                                "    },",
                                "    config: {",
                                "      transitional: [Object],",
                                "      adapter: [Function: httpAdapter],",
                                "      transformRequest: [Array],",
                                "      transformResponse: [Array],",
                                "      timeout: 0,",
                                "      xsrfCookieName: 'XSRF-TOKEN',",
                                "      xsrfHeaderName: 'X-XSRF-TOKEN',",
                                "      maxContentLength: -1,",
                                "      maxBodyLength: -1,",
                                "      validateStatus: [Function: validateStatus],",
                                "      headers: [Object],",
                                "      method: 'post',",
                                "      data: `{\"model\":\"gpt-3.5-turbo-0613\",\"messages\":[{\"role\":\"user\",\"content\":\"let import the solution 'mysolution.zip' from path '/tmp' in environment 'bartolo' as unmanaged\"}],\"functions\":[{\"name\":\"export_solution\",\"description\":\"export a dataverse solution to remove environment\",\"parameters\":{\"type\":\"object\",\"properties\":{\"path\":{\"type\":\"string\",\"description\":\"the solution path\"},\"environment\":{\"type\":\"string\",\"description\":\"the target environment\"},\"type\":{\"type\":\"string\",\"description\":\"the solution type. The default is managed\",\"enum\":[\"both\",\"managed\",\"unmanaged\"]}},\"required\":[\"path\",\"environment\"]}}],\"function_call\":\"auto\"}`,",
                                "      url: 'https://api.openai.com/v1/chat/completions'",
                                "    },",
                                "    request: <ref *1> ClientRequest {",
                                "      _events: [Object: null prototype],",
                                "      _eventsCount: 7,",
                                "      _maxListeners: undefined,",
                                "      outputData: [],",
                                "      outputSize: 0,",
                                "      writable: true,",
                                "      destroyed: true,",
                                "      _last: false,",
                                "      chunkedEncoding: false,",
                                "      shouldKeepAlive: true,",
                                "      maxRequestsOnConnectionReached: false,",
                                "      _defaultKeepAlive: true,",
                                "      useChunkedEncodingByDefault: true,",
                                "      sendDate: false,",
                                "      _removedConnection: false,",
                                "      _removedContLen: false,",
                                "      _removedTE: false,",
                                "      strictContentLength: false,",
                                "      _contentLength: 628,",
                                "      _hasBody: true,",
                                "      _trailer: '',",
                                "      finished: true,",
                                "      _headerSent: true,",
                                "      _closed: true,",
                                "      socket: [TLSSocket],",
                                "      _header: 'POST /v1/chat/completions HTTP/1.1\\r\\n' +",
                                "        'Accept: application/json, text/plain, */*\\r\\n' +",
                                "        'Content-Type: application/json\\r\\n' +",
                                "        'User-Agent: OpenAI/NodeJS/3.3.0\\r\\n' +",
                                "        'Authorization: Bearer bcd83e6bfda042629f8713a7aae58ec2\\r\\n' +",
                                "        'Content-Length: 628\\r\\n' +",
                                "        'Host: api.openai.com\\r\\n' +",
                                "        'Connection: keep-alive\\r\\n' +",
                                "        '\\r\\n',",
                                "      _keepAliveTimeout: 0,",
                                "      _onPendingData: [Function: nop],",
                                "      agent: [Agent],",
                                "      socketPath: undefined,",
                                "      method: 'POST',",
                                "      maxHeaderSize: undefined,",
                                "      insecureHTTPParser: undefined,",
                                "      joinDuplicateHeaders: undefined,",
                                "      path: '/v1/chat/completions',",
                                "      _ended: true,",
                                "      res: [IncomingMessage],",
                                "      aborted: false,",
                                "      timeoutCb: null,",
                                "      upgradeOrConnect: false,",
                                "      parser: null,",
                                "      maxHeadersCount: null,",
                                "      reusedSocket: false,",
                                "      host: 'api.openai.com',",
                                "      protocol: 'https:',",
                                "      _redirectable: [Writable],",
                                "      [Symbol(kCapture)]: false,",
                                "      [Symbol(kBytesWritten)]: 0,",
                                "      [Symbol(kNeedDrain)]: false,",
                                "      [Symbol(corked)]: 0,",
                                "      [Symbol(kOutHeaders)]: [Object: null prototype],",
                                "      [Symbol(errored)]: null,",
                                "      [Symbol(kHighWaterMark)]: 16384,",
                                "      [Symbol(kUniqueHeaders)]: null",
                                "    },",
                                "    data: { error: [Object] }",
                                "  },",
                                "  isAxiosError: true,",
                                "  toJSON: [Function: toJSON]",
                                "}",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "typescript",
            "source": [
                ""
            ],
            "outputs": []
        }
    ]
}